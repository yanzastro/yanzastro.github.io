@charset "utf-8";
/* CSS Document */


body {
	font: 100%/1.4 Verdana, Arial, Helvetica, sans-serif;
	background-color: #FFFFFF;
	margin: 0;
	padding: 0;
	color: #000;
}

/* ~~ 元素/标签选择�?~~ */
ul, ol, dl { /* 由于浏览器之间的差异，最佳做法是在列表中将填充和边距都设置为零。为了保持一致，您可以在此处指定需要的数值，也可以在列表所包含的列表项（LI、DT �?DD）中指定需要的数值。请注意，除非编写一个更为具体的选择器，否则您在此处进行的设置将会层叠到 .nav 列表�?*/
	padding: 0;
	margin: 0;
}


h1, h2, h3, h4, h5, h6, p {
	margin-top: 0;	 /* 删除上边距可以解决边距会超出其包含的 div 的问题。剩余的下边距可以使 div 与后面的任何元素保持一定距离�?*/
	padding-right: 15%;
	padding-left: 15%; /* �?div 内的元素侧边（而不�?div 自身）添加填充可避免使用任何方框模型数学。此外，也可将具有侧边填充的嵌套 div 用作替代方法�?*/
}
a img { /* 此选择器将删除某些浏览器中显示在图像周围的默认蓝色边框（当该图像包含在链接中时�?*/
	border: none;
	color: #00F;
}



/* ~~ 站点链接的样式必须保持此顺序，包括用于创建悬停效果的选择器组在内�?~~ */
a:link {
	color: #002859;
        border-bottom: 0.1% dashed #002859;
        text-decoration: none;

}


a:visited {
	color: #002859;
        border-bottom: 0.1% dashed #002859;
        text-decoration: none;

}
a:hover, a:active, a:focus { /* 此组选择器将为键盘导航者提供与鼠标使用者相同的悬停体验�?*/
	text-decoration: none;
	color: #002859;
}

.image-cropper {
    width:100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    border-radius: 50%; 

}

.center {
    margin: auto;
    width: 30%;
    padding: 8%;
}

/* ~~ 此固定宽度容器包含其�?div ~~ */
.container {
/*	width: 1000px;*/
	background-color: #FFF; /* 侧边的自动值与宽度结合使用，可以将布局居中对齐 */
	margin-top: 0;
	margin-right: 0;
	margin-bottom: 0;
	margin-left: 0;
}

/* ~~ 标题未指定宽度。它将扩展到布局的完整宽度。标题包含一个图像占位符，该占位符应替换为您自己的链接徽�?~~ */
/*
.navheader {
	background-color: #D1D9DE;
	height: 50px
	text-align: left;
	color: #FFF;
	height: 30px;
}
*/
/* ~~ 以下是此布局的列�?~~ 
1) 填充只会放置�?div 的顶部和/或底部。此 div 中的元素侧边会有填充。这样，您可以避免使用任�?方框模型数学"。请注意，如果向 div 自身添加任何侧边填充或边框，这些侧边填充或边框将与您定义的宽度相加，得出 *总计* 宽度。您也可以选择删除 div 中的元素的填充，并在该元素中另外放置一个没有任何宽度但具有设计所需填充�?div�?
2) 由于这些列均为浮动列，因此未对其指定边距。如果必须添加边距，请避免在浮动方向一侧放置边距（例如：div 中的右边距设置为向右浮动）。在很多情况下，都可以改用填充。对于必须打破此规则�?div，应向该 div 的规则中添加“display:inline”声明，以控制某些版本的 Internet Explorer 会使边距翻倍的错误�?
3) 由于可以在一个文档中多次使用类（并且一个元素可以应用多个类），因此已向这些列分配类名，而不�?ID。例如，必要时可堆叠两个侧栏 div。您可以根据个人偏好将这些名称轻松地改为 ID，前提是仅对每个文档使用一次�?
4) 如果您更喜欢在右侧（而不是左侧）进行导航，只需使这些列向相反方向浮动（全部向右，而非全部向左），它们将按相反顺序显示。您无需�?HTML 源文件中移动 div�?
*/


.sidebar {
	float: left;
	width: 25%;
        position: fixed;
        left: 0;
        top: 0;
        bottom: 0;
	background-color: #097896;
	text-align: center;
	font-size: 200%;
	color: #FFF;
}


.content {
        position: absolute;
        padding-top: 5%;
	text-align: justify;
	font-size: 80%;
        left: 30%;
        right: 10%;
	color: #002859;
}

/* ~~ 此分组的选择器为 .content 区域中的列表提供了空�?~~ */
.content ul, .content ol {
	padding: 0% 10% 15% 40%; /* 此填充反映上述标题和段落规则中的右填充。填充放置于下方可用于间隔列表中其它元素，置于左侧可用于创建缩进。您可以根据需要进行调整�?*/
	color: #00F; 
}

navh
{
	background-color: #D1D9DE;
	float: none;
	height: 27%;
	width: 100%;
	color: #097896;
	text-align: center;
	line-height: 80px;
	
}

navh {
	list-style: none;
}
ul.navh li {
	
}


/* ~~ 导航列表样式（如果选择使用预先创建�?Spry 等弹出菜单，则可以删除此样式�?~~ */
ul.nav {
	list-style: none; /* 这将删除列表标记 */
	/* 这将为链接创建上边框 �?使用下边框将所有其它项放置�?LI �?*/
	background-color: #097896;
	line-height: 150%;
}
ul.nav li {
	font-size: 100%;
	border-top-style: none;
	border-bottom-style: none;
        border-bottom: none;
	color: #FFF;
}
ul.nav a, ul.nav a:visited { /* 对这些选择器进行分组可确保链接即使在访问之后也能保持其按钮外观 */
	display: block;  /*此宽度使整个按钮�?IE6 中可单击。如果您不需要支�?IE6，可以删除它。请用侧栏容器的宽度减去此链接的填充来计算正确的宽度�?*/
	text-decoration: none;
	background-color: #097896;
        border-bottom: none;
	color: #FFF;
	height: 20%;
	margin: 0px;

}
ul.nav a:hover, ul.nav a:active, ul.nav a:focus { /* 这将更改鼠标和键盘导航的背景和文本颜�?*/
	background-color: #FFF;
        border-bottom: none;
	color: #002859;
	height: 10%;
}


/* ~~ 脚注 ~~ */
.footer {
	padding: 10px 0;
	background-color: #CCC49F;
	position: relative;/* 这可以使 IE6 hasLayout 以正确方式进行清�?*/
	clear: both; /* 此清除属性强�?.container 了解列的结束位置以及包含列的位置 */
}

/* ~~ 其它浮动/清除�?~~ */
.fltrt {  /* 此类可用于在页面中使元素向右浮动。浮动元素必须位于其在页面上的相邻元素之前�?*/
	float: right;
	margin-left: 8px;
}
.fltlft { /* 此类可用于在页面中使元素向左浮动。浮动元素必须位于其在页面上的相邻元素之前�?*/
	float: left;
	margin-right: 8px;
}
.clearfloat { /* 如果�?#container 中删除或移出�?#footer，则可以将此类放置在 <br /> 或空 div 中，作为 #container 内最后一个浮�?div 之后的最终元�?*/
	clear:both;
	height:0;
	font-size: 1px;
	line-height: 0px;
}











@media only screen and (max-width: 1000px) {

.image-cropper {
    width:100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    border-radius: 50%; 

}

.center {
    margin: auto;
    width: 30%;
    padding: 1%;
}


.sidebar {
	width: 100%;
        left: 0;
        position: relative;
        bottom: 1000px;
	background-color: #097896;
	text-align: center;
	font-size: 200%;
	color: #FFF;
}


.content {
        top: 60%;

	text-align: justify;
	font-size: 180%;
        left: -10%;
        right: -10%;
        width: 120%;
	color: #002859;
        z-index: -1;
}

/* ~~ 此分组的选择器为 .content 区域中的列表提供了空�?~~ */
.content ul, .content ol {
	padding: 0% 10% 15% 40%; /* 此填充反映上述标题和段落规则中的右填充。填充放置于下方可用于间隔列表中其它元素，置于左侧可用于创建缩进。您可以根据需要进行调整�?*/
	color: #00F; 
}

navh
{
	background-color: #D1D9DE;
	float: none;
	height: 27%;
	width: 100%;
	color: #097896;
	text-align: center;
	line-height: 80px;
	
}

navh {
	list-style: none;
}
ul.navh li {
	
}


/* ~~ 导航列表样式（如果选择使用预先创建�?Spry 等弹出菜单，则可以删除此样式�?~~ */
ul.nav {
	list-style: none; /* 这将删除列表标记 */
	/* 这将为链接创建上边框 �?使用下边框将所有其它项放置�?LI �?*/
	background-color: #097896;
	line-height: 180%;
}
ul.nav li {
	font-size: 100%;
	color: #FFF;
}
ul.nav a, ul.nav a:visited { /* 对这些选择器进行分组可确保链接即使在访问之后也能保持其按钮外观 */

	text-decoration: none;
	background-color: #097896;
        border-bottom: none;
	color: #FFF;
	height: 30%;
	margin: 0px;

}
ul.nav a:hover, ul.nav a:active, ul.nav a:focus { /* 这将更改鼠标和键盘导航的背景和文本颜�?*/
	background-color: #FFF;
        border-bottom: none;
	color: #002859;
	height: 10%;
}


/* ~~ 脚注 ~~ */
.footer {
	padding: 10px 0;
	background-color: #CCC49F;
	position: relative;/* 这可以使 IE6 hasLayout 以正确方式进行清�?*/
	clear: both; /* 此清除属性强�?.container 了解列的结束位置以及包含列的位置 */
}

/* ~~ 其它浮动/清除�?~~ */
.fltrt {  /* 此类可用于在页面中使元素向右浮动。浮动元素必须位于其在页面上的相邻元素之前�?*/
	float: right;
	margin-left: 8px;
}
.fltlft { /* 此类可用于在页面中使元素向左浮动。浮动元素必须位于其在页面上的相邻元素之前�?*/
	float: left;
	margin-right: 8px;
}
.clearfloat { /* 如果�?#container 中删除或移出�?#footer，则可以将此类放置在 <br /> 或空 div 中，作为 #container 内最后一个浮�?div 之后的最终元�?*/
	clear:both;
	height:0;
	font-size: 1px;
	line-height: 0px;
}


}

